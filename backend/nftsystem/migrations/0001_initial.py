# Generated by Django 3.2.3 on 2021-05-27 21:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenId', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=42, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, help_text='Identifies the asset to which this NFT represents', max_length=255, null=True)),
                ('description', models.CharField(blank=True, help_text='Describes the asset to which this NFT represents', max_length=255, null=True)),
                ('content', models.CharField(blank=True, help_text='A URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpandedToken',
            fields=[
                ('basetoken_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nftsystem.basetoken')),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nftsystem.metadata')),
            ],
            bases=('nftsystem.basetoken',),
        ),
    ]
